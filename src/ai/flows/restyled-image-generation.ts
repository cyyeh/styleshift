// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview Generates a restyled image based on user-provided photo, emotions, and styles.
 *
 * - restyledImageGeneration - A function that handles the image restyling process.
 * - RestyledImageGenerationInput - The input type for the restyledImageGeneration function.
 * - RestyledImageGenerationOutput - The return type for the restyledImageGeneration function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const RestyledImageGenerationInputSchema = z.object({
  photoDataUri: z
    .string()
    .describe(
      "A photo to be restyled, as a data URI that must include a MIME type and use Base64 encoding. Expected format: 'data:<mimetype>;base64,<encoded_data>'."
    ),
  emotions: z
    .array(z.string())
    .describe('A list of emotions to infuse into the photo.'),
  styles: z
    .array(z.string())
    .describe('A list of image styles to apply to the photo.'),
});
export type RestyledImageGenerationInput = z.infer<typeof RestyledImageGenerationInputSchema>;

const RestyledImageGenerationOutputSchema = z.object({
  restyledImage: z
    .string()
    .describe(
      'The restyled image, as a data URI that must include a MIME type and use Base64 encoding. Expected format: \'data:<mimetype>;base64,<encoded_data>\'.' // keep the backslashes
    ),
});
export type RestyledImageGenerationOutput = z.infer<typeof RestyledImageGenerationOutputSchema>;

export async function restyledImageGeneration(
  input: RestyledImageGenerationInput
): Promise<RestyledImageGenerationOutput> {
  return restyledImageGenerationFlow(input);
}

const prompt = ai.definePrompt({
  name: 'restyledImageGenerationPrompt',
  input: {schema: RestyledImageGenerationInputSchema},
  output: {schema: RestyledImageGenerationOutputSchema},
  prompt: `You are an AI that restyles images based on user-provided emotions and styles.

  The user has provided the following emotions: {{emotions}}
  The user has requested the following styles: {{styles}}
  Here is the image to be restyled: {{media url=photoDataUri}}

  Generate a restyled image that incorporates the specified emotions and styles. Return the restyled image as a data URI.
  Ensure that the output is a valid data URI.
`,
});

const restyledImageGenerationFlow = ai.defineFlow(
  {
    name: 'restyledImageGenerationFlow',
    inputSchema: RestyledImageGenerationInputSchema,
    outputSchema: RestyledImageGenerationOutputSchema,
  },
  async input => {
    const {media} = await ai.generate({
      model: 'googleai/gemini-2.0-flash-preview-image-generation',
      prompt: [
        {media: {url: input.photoDataUri}},
        {text: `Restyle this image with the following emotions: ${input.emotions.join(', ')}. Apply the following styles: ${input.styles.join(', ')}.`},
      ],
      config: {
        responseModalities: ['TEXT', 'IMAGE'],
      },
    });

    return {restyledImage: media.url!};
  }
);
